# User Service Configuration
server:
  port: 3009

spring:
  application:
    name: user-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/i3m_platform}
    username: ${DATABASE_USERNAME:i3m_user}
    password: ${DATABASE_PASSWORD:i3m_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      max-lifetime: 1200000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  data:
    redis:
      host: redis
      port: 6379
      password: i3m_password
      database: 0
      timeout: 2000ms
  
  cache:
    type: simple
    # redis:
    #   time-to-live: 600000 # 10 minutes
    #   cache-null-values: false
  
  security:
    jwt:
      secret: ${JWT_SECRET:your-super-secret-jwt-key-here}
      expiration: 900000 # 15 minutes in milliseconds

# Logging configuration
logging:
  level:
    com.i3m.userservice: ${LOG_LEVEL:DEBUG}
    org.springframework.security: ${LOG_LEVEL:DEBUG}
    org.hibernate.SQL: ${LOG_LEVEL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL:TRACE}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/user-service.log

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      percentiles:
        "[http.server.requests]": 0.5, 0.95, 0.99
      sla:
        "[http.server.requests]": 10ms, 50ms, 100ms, 200ms, 500ms

# Application specific configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3004}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: "*"
    allow-credentials: true
  
  pagination:
    default-page-size: 20
    max-page-size: 100
  
  cache:
    user-profile-ttl: 600 # 10 minutes
    user-list-ttl: 300 # 5 minutes
  
  security:
    rate-limit:
      enabled: true
      requests-per-minute: 100
    
    tenant-validation:
      enabled: true
      cache-ttl: 3600 # 1 hour

---
# Development profile
spring:
  config:
    activate:
      on-profile: development
  
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    com.i3m.userservice: DEBUG
    org.springframework.security: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: production
  
  jpa:
    show-sql: false

logging:
  level:
    com.i3m.userservice: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

---
# Test profile
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

logging:
  level:
    com.i3m.userservice: DEBUG
